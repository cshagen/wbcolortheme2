{"version":3,"file":"css/MqttBridgeConfig.85c1ac41.css","mappings":"AA8eA,4BACC,cACD","sources":["webpack://openwb-ui-settings/./src/views/MqttBridgeConfig.vue"],"sourcesContent":["<template>\n\t<!-- modal dialogs -->\n\t<openwb-base-modal-dialog\n\t\t:show=\"showMqttBridgeModal\"\n\t\ttitle=\"MQTT-Brücke löschen\"\n\t\tsubtype=\"danger\"\n\t\t:buttons=\"[{ text: 'Löschen', event: 'confirm', subtype: 'danger' }]\"\n\t\t@modal-result=\"removeMqttBridge(modalMqttBridgeIndex, $event)\"\n\t>\n\t\tWollen Sie die MQTT-Brücke \"{{\n\t\t\tgetMqttBridgeName(modalMqttBridgeIndex)\n\t\t}}\" wirklich entfernen? Dieser Vorgang kann nicht rückgängig gemacht\n\t\twerden!\n\t</openwb-base-modal-dialog>\n\t<!-- main content -->\n\t<div class=\"mqttBridgeConfiguration\">\n\t\t<openwb-base-alert subtype=\"danger\">\n\t\t\tACHTUNG: Die Konfiguration einer MQTT-Brücke erlaubt allen Nutzern\n\t\t\tmit Zugang zum entfernten MQTT-Server alle weitergeleiteten Daten\n\t\t\tdieser openWB einzusehen!<br />\n\t\t\tEs wird dringend empfohlen, dies nur für nicht-öffentliche\n\t\t\tMQTT-Server unter Verwendung starker Transport-Verschlüsselung (TLS)\n\t\t\tmit persönlichem Login und strenger Zugriffskontrolle (zumindest für\n\t\t\tdie MQTT-Thema unterhalb von \"Entfernter Präfix\") zu aktivieren!\n\t\t</openwb-base-alert>\n\t\t<openwb-base-card title=\"Konfigurierte MQTT-Brücken\">\n\t\t\t<template #actions>\n\t\t\t\t<openwb-base-avatar\n\t\t\t\t\tclass=\"bg-success clickable\"\n\t\t\t\t\tv-if=\"$store.state.mqtt['openWB/general/extern'] === false\"\n\t\t\t\t\t@click=\"addMqttBridge\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon fixed-width :icon=\"['fas', 'plus']\" />\n\t\t\t\t</openwb-base-avatar>\n\t\t\t</template>\n\t\t\t<div v-if=\"$store.state.mqtt['openWB/general/extern'] === true\">\n\t\t\t\t<openwb-base-alert subtype=\"info\">\n\t\t\t\t\tDiese Einstellungen sind nicht verfügbar, solange sich diese\n\t\t\t\t\topenWB im Modus \"Nur Ladepunkt\" befindet.\n\t\t\t\t</openwb-base-alert>\n\t\t\t</div>\n\t\t\t<div v-else>\n\t\t\t\t<openwb-base-alert\n\t\t\t\t\tv-if=\"Object.keys(configuredMqttBridges).length === 0\"\n\t\t\t\t\tsubtype=\"info\"\n\t\t\t\t>\n\t\t\t\t\tEs wurde noch keine MQTT Brücke konfiguriert.\n\t\t\t\t</openwb-base-alert>\n\t\t\t\t<form\n\t\t\t\t\tv-for=\"(mqttBridge, mqttBridgeKey) in configuredMqttBridges\"\n\t\t\t\t\t:key=\"mqttBridgeKey\"\n\t\t\t\t\t:name=\"\n\t\t\t\t\t\t'mqttBridgeConfigurationForm' +\n\t\t\t\t\t\tgetMqttBridgeIndex(mqttBridgeKey)\n\t\t\t\t\t\"\n\t\t\t\t>\n\t\t\t\t\t<openwb-base-card\n\t\t\t\t\t\t:title=\"mqttBridge.name\"\n\t\t\t\t\t\t:collapsible=\"true\"\n\t\t\t\t\t\t:collapsed=\"true\"\n\t\t\t\t\t\tsubtype=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #actions>\n\t\t\t\t\t\t\t<openwb-base-avatar\n\t\t\t\t\t\t\t\tclass=\"bg-danger clickable\"\n\t\t\t\t\t\t\t\t@click=\"\n\t\t\t\t\t\t\t\t\tremoveMqttBridgeModal(mqttBridgeKey, $event)\n\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<font-awesome-icon\n\t\t\t\t\t\t\t\t\tfixed-width\n\t\t\t\t\t\t\t\t\t:icon=\"['fas', 'trash']\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</openwb-base-avatar>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<openwb-base-text-input\n\t\t\t\t\t\t\ttitle=\"Bezeichnung\"\n\t\t\t\t\t\t\tsubtype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tpattern=\"[A-Za-z0-9]+\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.name\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(mqttBridgeKey, $event, 'name')\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #help>\n\t\t\t\t\t\t\t\tDie Bezeichnung darf nur aus Buchstaben ohne\n\t\t\t\t\t\t\t\tUmlaute und Zahlen bestehen.\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</openwb-base-text-input>\n\t\t\t\t\t\t<openwb-base-button-group-input\n\t\t\t\t\t\t\ttitle=\"Brücke aktivieren\"\n\t\t\t\t\t\t\t:buttons=\"[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: false,\n\t\t\t\t\t\t\t\t\ttext: 'Nein',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-danger',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: true,\n\t\t\t\t\t\t\t\t\ttext: 'Ja',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-success',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.active\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(mqttBridgeKey, $event, 'active')\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<openwb-base-heading>\n\t\t\t\t\t\t\tEinstellungen zur Verbindung\n\t\t\t\t\t\t</openwb-base-heading>\n\t\t\t\t\t\t<openwb-base-text-input\n\t\t\t\t\t\t\ttitle=\"Entfernter Server\"\n\t\t\t\t\t\t\tsubtype=\"host\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.host\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.host'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<openwb-base-number-input\n\t\t\t\t\t\t\ttitle=\"Entfernter Port\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t:min=\"1\"\n\t\t\t\t\t\t\t:max=\"65535\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.port\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.port'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<openwb-base-text-input\n\t\t\t\t\t\t\ttitle=\"Benutzername\"\n\t\t\t\t\t\t\tsubtype=\"user\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tpattern=\"[a-zA-Z0-9_\\-+.]+\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.username\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.username'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<openwb-base-text-input\n\t\t\t\t\t\t\ttitle=\"Passwort\"\n\t\t\t\t\t\t\tsubtype=\"password\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.password\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.password'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<openwb-base-text-input\n\t\t\t\t\t\t\ttitle=\"Präfix\"\n\t\t\t\t\t\t\tsubtype=\"text\"\n\t\t\t\t\t\t\tpattern=\"[A-Za-z0-9_\\-]+(\\/[A-Za-z0-9_\\-]+)?\\/\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.prefix\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.prefix'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #help>\n\t\t\t\t\t\t\t\tDas Präfix darf nur aus Buchstaben ohne Umlaute,\n\t\t\t\t\t\t\t\tZahlen, Binde- und Unterstrichen bestehen.\n\t\t\t\t\t\t\t\tOptional kann mit einem Schrägstrich \"/\" eine\n\t\t\t\t\t\t\t\tTopic-Struktur abgebildet werden. Am Ende des\n\t\t\t\t\t\t\t\tPräfix muss ein Schrägstrich \"/\" stehen.\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</openwb-base-text-input>\n\t\t\t\t\t\t<openwb-base-text-input\n\t\t\t\t\t\t\ttitle=\"Client ID\"\n\t\t\t\t\t\t\tsubtype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tpattern=\"[A-Za-z0-9_\\-]+\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.client_id\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.client_id'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #help>\n\t\t\t\t\t\t\t\tDie Client ID darf nur aus Buchstaben ohne\n\t\t\t\t\t\t\t\tUmlaute, Zahlen, Binde- und Unterstrichen\n\t\t\t\t\t\t\t\tbestehen.\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</openwb-base-text-input>\n\t\t\t\t\t\t<openwb-base-button-group-input\n\t\t\t\t\t\t\ttitle=\"MQTT Protokoll\"\n\t\t\t\t\t\t\trequired=\"required\"\n\t\t\t\t\t\t\t:buttons=\"[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: 'mqttv31',\n\t\t\t\t\t\t\t\t\ttext: 'v3.1',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: 'mqttv311',\n\t\t\t\t\t\t\t\t\ttext: 'v3.1.1',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.protocol\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.protocol'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<openwb-base-button-group-input\n\t\t\t\t\t\t\ttitle=\"TLS Version\"\n\t\t\t\t\t\t\t:buttons=\"[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: 'auto',\n\t\t\t\t\t\t\t\t\ttext: 'Automatisch',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-success',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: 'tlsv1.0',\n\t\t\t\t\t\t\t\t\ttext: 'v1.0',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-warning',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: 'tlsv1.1',\n\t\t\t\t\t\t\t\t\ttext: 'v1.1',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-warning',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: 'tlsv1.2',\n\t\t\t\t\t\t\t\t\ttext: 'v1.2',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.tls_version\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.tls_version'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #help>\n\t\t\t\t\t\t\t\tIn der Einstellung \"Automatisch\" wird die\n\t\t\t\t\t\t\t\tVersion zwischen Client und Server ausgehandelt.\n\t\t\t\t\t\t\t\tWenn erforderlich, kann eine spezielle Version\n\t\t\t\t\t\t\t\terzwungen werden. Versionen kleiner 1.2 gelten\n\t\t\t\t\t\t\t\tals veraltet und sollten nicht mehr verwendet\n\t\t\t\t\t\t\t\twerden.\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</openwb-base-button-group-input>\n\t\t\t\t\t\t<openwb-base-button-group-input\n\t\t\t\t\t\t\ttitle=\"Brücke signalisieren\"\n\t\t\t\t\t\t\t:buttons=\"[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: false,\n\t\t\t\t\t\t\t\t\ttext: 'Aus',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-danger',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: true,\n\t\t\t\t\t\t\t\t\ttext: 'An',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-success',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.remote.try_private\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'remote.try_private'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #help>\n\t\t\t\t\t\t\t\tAktiviert eine proprietäre Protokoll-Erweiterung\n\t\t\t\t\t\t\t\tdes Mosquitto Brokers, welche dem entfernten\n\t\t\t\t\t\t\t\tBroker signalisiert dass es sich um eine MQTT\n\t\t\t\t\t\t\t\tBrücke handelt. Ergibt bessere Leistung mit\n\t\t\t\t\t\t\t\tMosquitto-Brokern, ist jedoch inkompatibel mit\n\t\t\t\t\t\t\t\tvielen anderen MQTT-Brokern. Daher bitte nur\n\t\t\t\t\t\t\t\taktivieren, wenn der Ziel-Broker sicher ein\n\t\t\t\t\t\t\t\tMosquitto-Broker ist.\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</openwb-base-button-group-input>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<openwb-base-heading\n\t\t\t\t\t\t\t>Datenübertragung</openwb-base-heading\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<openwb-base-button-group-input\n\t\t\t\t\t\t\ttitle=\"Alle Statusdaten\"\n\t\t\t\t\t\t\t:buttons=\"[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: false,\n\t\t\t\t\t\t\t\t\ttext: 'Aus',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-danger',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: true,\n\t\t\t\t\t\t\t\t\ttext: 'An',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-success',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.data_transfer.status\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'data_transfer.status'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #help>ToDo...</template>\n\t\t\t\t\t\t</openwb-base-button-group-input>\n\t\t\t\t\t\t<openwb-base-button-group-input\n\t\t\t\t\t\t\ttitle=\"Datenserien für Diagramme\"\n\t\t\t\t\t\t\t:buttons=\"[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: false,\n\t\t\t\t\t\t\t\t\ttext: 'Aus',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-danger',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: true,\n\t\t\t\t\t\t\t\t\ttext: 'An',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-success',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t:model-value=\"mqttBridge.data_transfer.graph\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'data_transfer.graph'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #help>ToDo...</template>\n\t\t\t\t\t\t</openwb-base-button-group-input>\n\t\t\t\t\t\t<openwb-base-button-group-input\n\t\t\t\t\t\t\ttitle=\"Fernkonfiguration ermöglichen\"\n\t\t\t\t\t\t\t:buttons=\"[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: false,\n\t\t\t\t\t\t\t\t\ttext: 'Aus',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-danger',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbuttonValue: true,\n\t\t\t\t\t\t\t\t\ttext: 'An',\n\t\t\t\t\t\t\t\t\tclass: 'btn-outline-success',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t:model-value=\"\n\t\t\t\t\t\t\t\tmqttBridge.data_transfer.configuration\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t@update:model-value=\"\n\t\t\t\t\t\t\t\tupdateState(\n\t\t\t\t\t\t\t\t\tmqttBridgeKey,\n\t\t\t\t\t\t\t\t\t$event,\n\t\t\t\t\t\t\t\t\t'data_transfer.configuration'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #help>ToDo...</template>\n\t\t\t\t\t\t</openwb-base-button-group-input>\n\t\t\t\t\t\t<template #footer>\n\t\t\t\t\t\t\t<openwb-base-submit-buttons\n\t\t\t\t\t\t\t\t:formName=\"\n\t\t\t\t\t\t\t\t\t'mqttBridgeConfigurationForm' +\n\t\t\t\t\t\t\t\t\tgetMqttBridgeIndex(mqttBridgeKey)\n\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t:hideDefaults=\"true\"\n\t\t\t\t\t\t\t\t@save=\"$emit('save', [mqttBridgeKey])\"\n\t\t\t\t\t\t\t\t@reset=\"$emit('reset', [mqttBridgeKey])\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</openwb-base-card>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</openwb-base-card>\n\t</div>\n</template>\n\n<script>\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n\tfaPlus as fasPlus,\n\tfaTrash as fasTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nlibrary.add(fasPlus, fasTrash);\n\nimport ComponentStateMixin from \"@/components/mixins/ComponentState.vue\";\n\nexport default {\n\tname: \"OpenwbMqttBridgeConfiguration\",\n\tmixins: [ComponentStateMixin],\n\temits: [\"sendCommand\"],\n\tcomponents: {\n\t\tFontAwesomeIcon,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmqttTopicsToSubscribe: [\n\t\t\t\t\"openWB/general/extern\",\n\t\t\t\t\"openWB/system/mqtt/bridge/+\",\n\t\t\t],\n\t\t\tshowMqttBridgeModal: false,\n\t\t\tmodalMqttBridgeIndex: undefined,\n\t\t};\n\t},\n\tcomputed: {\n\t\tconfiguredMqttBridges: {\n\t\t\tget() {\n\t\t\t\tlet bridges = this.getWildcardTopics(\n\t\t\t\t\t\"openWB/system/mqtt/bridge/+\"\n\t\t\t\t);\n\t\t\t\tfor (const [key, value] of Object.entries(bridges)) {\n\t\t\t\t\tif (value.remote.is_openwb_cloud) {\n\t\t\t\t\t\tconsole.log(\"filtering bridge \" + key, value);\n\t\t\t\t\t\tdelete bridges[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn bridges;\n\t\t\t},\n\t\t},\n\t},\n\tmethods: {\n\t\taddMqttBridge(event) {\n\t\t\t// prevent further processing of the click event\n\t\t\tevent.stopPropagation();\n\t\t\tthis.$emit(\"sendCommand\", {\n\t\t\t\tcommand: \"addMqttBridge\",\n\t\t\t\tdata: {},\n\t\t\t});\n\t\t},\n\t\tgetMqttBridgeIndex(bridgeKey) {\n\t\t\treturn parseInt(bridgeKey.match(/(?:\\/)(\\d+)$/)[1]);\n\t\t},\n\t\tremoveMqttBridgeModal(mqttBridge, event) {\n\t\t\t// prevent further processing of the click event\n\t\t\tevent.stopPropagation();\n\t\t\tconsole.log(\"removeMqttBridgeModal\", mqttBridge);\n\t\t\tthis.modalMqttBridgeIndex = this.getMqttBridgeIndex(mqttBridge);\n\t\t\tthis.showMqttBridgeModal = true;\n\t\t},\n\t\tremoveMqttBridge(mqttBridgeIndex, event) {\n\t\t\tthis.showMqttBridgeModal = false;\n\t\t\tif (event == \"confirm\") {\n\t\t\t\tconsole.info(\n\t\t\t\t\t\"request removal of mqtt bridge '\" + mqttBridgeIndex + \"'\"\n\t\t\t\t);\n\t\t\t\tthis.$emit(\"sendCommand\", {\n\t\t\t\t\tcommand: \"removeMqttBridge\",\n\t\t\t\t\tdata: { bridge: mqttBridgeIndex },\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tgetMqttBridgeName(mqttBridgeIndex) {\n\t\t\treturn this.$store.state.mqtt[\n\t\t\t\t\"openWB/system/mqtt/bridge/\" + mqttBridgeIndex\n\t\t\t]\n\t\t\t\t? this.$store.state.mqtt[\n\t\t\t\t\t\t\"openWB/system/mqtt/bridge/\" + mqttBridgeIndex\n\t\t\t\t  ].name\n\t\t\t\t: mqttBridgeIndex;\n\t\t},\n\t},\n};\n</script>\n\n<style scoped>\n.clickable {\n\tcursor: pointer;\n}\n</style>\n"],"names":[],"sourceRoot":""}