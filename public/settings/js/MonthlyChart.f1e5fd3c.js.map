{"version":3,"file":"js/MonthlyChart.f1e5fd3c.js","mappings":"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","sources":["webpack://openwb-ui-settings/./src/views/MonthlyChart.vue","webpack://openwb-ui-settings/./src/views/MonthlyChart.vue?b235"],"sourcesContent":["<template>\n\t<div class=\"monthlyChart\">\n\t\t<form name=\"monthlyChartForm\">\n\t\t\t<openwb-base-card\n\t\t\t\ttitle=\"Filter\"\n\t\t\t\t:collapsible=\"true\"\n\t\t\t\t:collapsed=\"false\"\n\t\t\t>\n\t\t\t\t<openwb-base-text-input\n\t\t\t\t\ttitle=\"Monat\"\n\t\t\t\t\tsubtype=\"month\"\n\t\t\t\t\tmin=\"2018-01\"\n\t\t\t\t\t:max=\"currentMonth\"\n\t\t\t\t\tv-model=\"monthlyChartDate\"\n\t\t\t\t/>\n\t\t\t\t<template #footer>\n\t\t\t\t\t<div class=\"row justify-content-center\">\n\t\t\t\t\t\t<openwb-base-click-button\n\t\t\t\t\t\t\tclass=\"col-4 btn-success\"\n\t\t\t\t\t\t\t@click=\"requestMonthlyChart()\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDaten anfordern\n\t\t\t\t\t\t</openwb-base-click-button>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</openwb-base-card>\n\t\t\t<openwb-base-alert v-if=\"!chartDataRead\" subtype=\"info\">\n\t\t\t\tEs wurden noch keine Daten abgerufen.\n\t\t\t</openwb-base-alert>\n\t\t\t<div v-else>\n\t\t\t\t<openwb-base-alert v-if=\"!chartDataHasEntries\" subtype=\"info\">\n\t\t\t\t\tEs konnten keine Daten für diesen Zeitraum gefunden werden.\n\t\t\t\t</openwb-base-alert>\n\t\t\t\t<div v-else>\n\t\t\t\t\t<openwb-base-card\n\t\t\t\t\t\ttitle=\"Diagramm\"\n\t\t\t\t\t\t:collapsible=\"true\"\n\t\t\t\t\t\t:collapsed=\"false\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Line\n\t\t\t\t\t\t\t:chartData=\"chartData\"\n\t\t\t\t\t\t\t:chartOptions=\"chartOptions\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</openwb-base-card>\n\t\t\t\t\t<openwb-base-card\n\t\t\t\t\t\ttitle=\"Summen\"\n\t\t\t\t\t\t:collapsible=\"true\"\n\t\t\t\t\t\t:collapsed=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<openwb-base-card\n\t\t\t\t\t\t\tv-for=\"(group, groupKey) in chartTotals\"\n\t\t\t\t\t\t\t:key=\"groupKey\"\n\t\t\t\t\t\t\t:title=\"getTotalsLabel(groupKey)\"\n\t\t\t\t\t\t\t:collapsible=\"true\"\n\t\t\t\t\t\t\t:collapsed=\"true\"\n\t\t\t\t\t\t\t:subtype=\"getCardSubtype(groupKey)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tv-for=\"(component, componentKey) in group\"\n\t\t\t\t\t\t\t\t:key=\"componentKey\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<openwb-base-heading>{{\n\t\t\t\t\t\t\t\t\tgetTotalsLabel(groupKey, componentKey)\n\t\t\t\t\t\t\t\t}}</openwb-base-heading>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tv-for=\"(\n\t\t\t\t\t\t\t\t\t\tmeasurement, measurementKey\n\t\t\t\t\t\t\t\t\t) in component\"\n\t\t\t\t\t\t\t\t\t:key=\"measurementKey\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<openwb-base-text-input\n\t\t\t\t\t\t\t\t\t\t:title=\"\n\t\t\t\t\t\t\t\t\t\t\tgetTotalsLabel(\n\t\t\t\t\t\t\t\t\t\t\t\tgroupKey,\n\t\t\t\t\t\t\t\t\t\t\t\tcomponentKey,\n\t\t\t\t\t\t\t\t\t\t\t\tmeasurementKey\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\t\tclass=\"text-right\"\n\t\t\t\t\t\t\t\t\t\tunit=\"kWh\"\n\t\t\t\t\t\t\t\t\t\t:model-value=\"\n\t\t\t\t\t\t\t\t\t\t\tformatNumber(measurement / 1000, 3)\n\t\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</openwb-base-card>\n\t\t\t\t\t</openwb-base-card>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</template>\n\n<script>\nimport ComponentStateMixin from \"@/components/mixins/ComponentState.vue\";\n\nimport { Line } from \"vue-chartjs\";\nimport \"chartjs-adapter-luxon\";\nimport \"hammerjs\";\nimport ZoomPlugin from \"chartjs-plugin-zoom\";\nimport {\n\tChart,\n\tTooltip,\n\tLegend,\n\tLineController,\n\tLineElement,\n\tPointElement,\n\tLinearScale,\n\tTimeScale,\n\tFiller,\n} from \"chart.js\";\nChart.register(\n\tTooltip,\n\tLegend,\n\tLineController,\n\tLineElement,\n\tPointElement,\n\tLinearScale,\n\tTimeScale,\n\tFiller,\n\tZoomPlugin\n);\n\nexport default {\n\tname: \"OpenwbMonthlyChart\",\n\tcomponents: { Line },\n\tmixins: [ComponentStateMixin],\n\temits: [\"sendCommand\"],\n\tdata() {\n\t\treturn {\n\t\t\tmqttTopicsToSubscribe: [\n\t\t\t\t\"openWB/general/extern\",\n\t\t\t\t\"openWB/log/monthly/#\",\n\t\t\t\t\"openWB/system/device/+/component/+/config\",\n\t\t\t\t\"openWB/chargepoint/+/config\",\n\t\t\t\t\"openWB/vehicle/+/name\",\n\t\t\t],\n\t\t\tcurrentMonth: \"\",\n\t\t\tmonthlyChartRequestData: {\n\t\t\t\tmonth: \"\",\n\t\t\t\tyear: \"\",\n\t\t\t},\n\t\t\tdatasetTemplates: {\n\t\t\t\t\"counter-power\": {\n\t\t\t\t\tlabel: \"Zähler\",\n\t\t\t\t\tjsonKey: null,\n\t\t\t\t\tborderColor: \"rgba(255, 0, 0, 0.7)\",\n\t\t\t\t\tbackgroundColor: \"rgba(255, 10, 13, 0.3)\",\n\t\t\t\t\tfill: true,\n\t\t\t\t\tlineTension: 0.2,\n\t\t\t\t\thidden: false,\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdata: null,\n\t\t\t\t\tyAxisID: \"y1\",\n\t\t\t\t\tparsing: {\n\t\t\t\t\t\txAxisKey: \"timestamp\",\n\t\t\t\t\t\tyAxisKey: null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"pv-power\": {\n\t\t\t\t\tlabel: \"PV\",\n\t\t\t\t\tjsonKey: null,\n\t\t\t\t\tborderColor: \"rgba(0, 255, 0, 0.7)\",\n\t\t\t\t\tbackgroundColor: \"rgba(10, 255, 13, 0.3)\",\n\t\t\t\t\tfill: true,\n\t\t\t\t\tlineTension: 0.2,\n\t\t\t\t\thidden: true,\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdata: null,\n\t\t\t\t\tyAxisID: \"y1\",\n\t\t\t\t\tparsing: {\n\t\t\t\t\t\txAxisKey: \"timestamp\",\n\t\t\t\t\t\tyAxisKey: null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"bat-power\": {\n\t\t\t\t\tlabel: \"Speicher\",\n\t\t\t\t\tjsonKey: null,\n\t\t\t\t\tborderColor: \"rgba(255, 153, 13, 0.7)\",\n\t\t\t\t\tbackgroundColor: \"rgba(200, 255, 13, 0.3)\",\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.2,\n\t\t\t\t\thidden: true,\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdata: null,\n\t\t\t\t\tyAxisID: \"y1\",\n\t\t\t\t\tparsing: {\n\t\t\t\t\t\txAxisKey: \"timestamp\",\n\t\t\t\t\t\tyAxisKey: null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"cp-power\": {\n\t\t\t\t\tlabel: \"Ladepunkt\",\n\t\t\t\t\tjsonKey: null,\n\t\t\t\t\tborderColor: \"rgba(0, 0, 255, 0.7)\",\n\t\t\t\t\tbackgroundColor: \"rgba(0, 0, 255, 0.3)\",\n\t\t\t\t\tfill: true,\n\t\t\t\t\tlineTension: 0.2,\n\t\t\t\t\thidden: true,\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdata: null,\n\t\t\t\t\tyAxisID: \"y1\",\n\t\t\t\t\tparsing: {\n\t\t\t\t\t\txAxisKey: \"timestamp\",\n\t\t\t\t\t\tyAxisKey: null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tchartOptions: {\n\t\t\t\tplugins: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t},\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\t// Container for pan options\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\t// Boolean to enable panning\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t// Panning directions. Remove the appropriate direction to disable\n\t\t\t\t\t\t\t// Eg. 'y' would only allow panning in the y direction\n\t\t\t\t\t\t\tmode: \"x\",\n\t\t\t\t\t\t\tthreshold: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// Container for zoom options\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\t// Boolean to enable zooming\n\t\t\t\t\t\t\twheel: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpinch: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t// Zooming directions. Remove the appropriate direction to disable\n\t\t\t\t\t\t\t// Eg. 'y' would only allow zooming in the y direction\n\t\t\t\t\t\t\tmode: \"x\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\telements: {\n\t\t\t\t\tpoint: {\n\t\t\t\t\t\tradius: 0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\ttype: \"time\",\n\t\t\t\t\t\ttime: {\n\t\t\t\t\t\t\tunit: \"day\",\n\t\t\t\t\t\t\ttooltipFormat: \"D\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: \"Tag\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tsource: \"timestamp\",\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\tsize: 12,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t// color: tickColor,\n\t\t\t\t\t\t\tmaxTicksLimit: 31,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\t// color: xGridColor,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\ty1: {\n\t\t\t\t\t\t// horizontal line for values displayed on the left side (power, kW)\n\t\t\t\t\t\tposition: \"left\",\n\t\t\t\t\t\ttype: \"linear\",\n\t\t\t\t\t\tdisplay: \"auto\",\n\t\t\t\t\t\tsuggestedMin: 0,\n\t\t\t\t\t\tsuggestedMax: 0,\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\tsize: 12,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: \"Energie [kWh]\",\n\t\t\t\t\t\t\t// color: fontColor\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\t// color: gridColor\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\tsize: 12,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstepSize: 0.2,\n\t\t\t\t\t\t\tmaxTicksLimit: 11,\n\t\t\t\t\t\t\t// color: tickColor\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tchartDatasets: {\n\t\t\t\tdatasets: [],\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\tmonthlyChartDate: {\n\t\t\tget() {\n\t\t\t\treturn (\n\t\t\t\t\tthis.monthlyChartRequestData.year +\n\t\t\t\t\t\"-\" +\n\t\t\t\t\tthis.monthlyChartRequestData.month\n\t\t\t\t);\n\t\t\t},\n\t\t\tset(newValue) {\n\t\t\t\tlet splitDate = newValue.split(\"-\");\n\t\t\t\tthis.monthlyChartRequestData.year = splitDate[0];\n\t\t\t\tthis.monthlyChartRequestData.month = splitDate[1];\n\t\t\t},\n\t\t},\n\t\tcommandData() {\n\t\t\treturn {\n\t\t\t\tmonth:\n\t\t\t\t\tthis.monthlyChartRequestData.year +\n\t\t\t\t\tthis.monthlyChartRequestData.month,\n\t\t\t};\n\t\t},\n\t\tchartDataRead() {\n\t\t\treturn this.chartDataObject != undefined;\n\t\t},\n\t\tchartDataHasEntries() {\n\t\t\treturn this.chartDataObject.length > 0;\n\t\t},\n\t\tchartTotals() {\n\t\t\tif (\n\t\t\t\tthis.$store.state.mqtt[\n\t\t\t\t\t\"openWB/log/monthly/\" + this.commandData.month\n\t\t\t\t]\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\tthis.$store.state.mqtt[\n\t\t\t\t\t\t\t\"openWB/log/monthly/\" + this.commandData.month\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"totals\"\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn this.$store.state.mqtt[\n\t\t\t\t\t\t\"openWB/log/monthly/\" + this.commandData.month\n\t\t\t\t\t].totals;\n\t\t\t\t} else {\n\t\t\t\t\t// code for old log data without totals\n\t\t\t\t\tvar diff = {\n\t\t\t\t\t\tbat: {},\n\t\t\t\t\t\tcounter: {},\n\t\t\t\t\t\tpv: {},\n\t\t\t\t\t\tcp: {},\n\t\t\t\t\t};\n\t\t\t\t\tconst keysToProcess = [\"imported\", \"exported\"];\n\n\t\t\t\t\tconst process = (startValue, endValue, path) => {\n\t\t\t\t\t\t// console.log(\"process:\", path);\n\t\t\t\t\t\tconst keys = path.split(\".\");\n\t\t\t\t\t\tif (keysToProcess.includes(keys[keys.length - 1])) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!Object.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\tdiff[keys[0]],\n\t\t\t\t\t\t\t\t\t[keys[1]]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tdiff[keys[0]][keys[1]] = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiff[keys[0]][keys[1]][keys[2]] = Math.floor(\n\t\t\t\t\t\t\t\tendValue - startValue\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tconst traverse = (\n\t\t\t\t\t\tstartObject,\n\t\t\t\t\t\tendObject,\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\tcurrentPath = \"\"\n\t\t\t\t\t) => {\n\t\t\t\t\t\tfor (var element in endObject) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tendObject[element] !== null &&\n\t\t\t\t\t\t\t\ttypeof endObject[element] == \"object\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t//going one step down in the object tree!!\n\t\t\t\t\t\t\t\ttraverse(\n\t\t\t\t\t\t\t\t\tstartObject[element],\n\t\t\t\t\t\t\t\t\tendObject[element],\n\t\t\t\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t\t\t\tcurrentPath\n\t\t\t\t\t\t\t\t\t\t? currentPath + \".\" + element\n\t\t\t\t\t\t\t\t\t\t: element\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmethod.apply(this, [\n\t\t\t\t\t\t\t\t\tstartObject[element],\n\t\t\t\t\t\t\t\t\tendObject[element],\n\t\t\t\t\t\t\t\t\tcurrentPath\n\t\t\t\t\t\t\t\t\t\t? currentPath + \".\" + element\n\t\t\t\t\t\t\t\t\t\t: element,\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tvar chartEntries =\n\t\t\t\t\t\tthis.$store.state.mqtt[\n\t\t\t\t\t\t\t\"openWB/log/monthly/\" + this.commandData.month\n\t\t\t\t\t\t];\n\t\t\t\t\tconst start = chartEntries[0];\n\t\t\t\t\tconst end = chartEntries[chartEntries.length - 1];\n\t\t\t\t\ttraverse(start, end, process);\n\t\t\t\t\treturn diff;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\t\tchartDataObject() {\n\t\t\tif (\n\t\t\t\tthis.$store.state.mqtt[\n\t\t\t\t\t\"openWB/log/monthly/\" + this.commandData.month\n\t\t\t\t]\n\t\t\t) {\n\t\t\t\tvar chartEntries =\n\t\t\t\t\tthis.$store.state.mqtt[\n\t\t\t\t\t\t\"openWB/log/monthly/\" + this.commandData.month\n\t\t\t\t\t];\n\t\t\t\tif (\n\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\tchartEntries,\n\t\t\t\t\t\t\"entries\"\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tconsole.debug(\"upgraded chart data received\");\n\t\t\t\t\tchartEntries = chartEntries.entries;\n\t\t\t\t}\n\t\t\t\tvar lastRow = undefined;\n\t\t\t\tvar myData = JSON.parse(JSON.stringify(chartEntries)).map(\n\t\t\t\t\t(row) => {\n\t\t\t\t\t\trow.timestamp = row.timestamp * 1000;\n\t\t\t\t\t\tif (lastRow !== undefined) {\n\t\t\t\t\t\t\tconst timeDiff = row.timestamp - lastRow.timestamp;\n\t\t\t\t\t\t\tvar baseObjectsToProcess = [\n\t\t\t\t\t\t\t\t\"pv\",\n\t\t\t\t\t\t\t\t\"counter\",\n\t\t\t\t\t\t\t\t\"bat\",\n\t\t\t\t\t\t\t\t\"cp\",\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tbaseObjectsToProcess.forEach((baseObject) => {\n\t\t\t\t\t\t\t\tObject.entries(row[baseObject]).forEach(\n\t\t\t\t\t\t\t\t\t([key, value]) => {\n\t\t\t\t\t\t\t\t\t\tif (lastRow[baseObject][key]) {\n\t\t\t\t\t\t\t\t\t\t\tObject.keys(value).forEach(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (baseObject) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"pv\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"exported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"exported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].power =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(row[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.exported -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.exported) /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(timeDiff /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1000 /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t3600)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) / 1000;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"counter\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"imported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"imported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"exported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"exported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].power =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(row[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.imported -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.imported -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(row[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.exported -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.exported)) /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(timeDiff /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1000 /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t3600)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) / 1000;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].powerImport = Math.max(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].power\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].powerExport = Math.min(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].power\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"bat\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"imported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"imported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"exported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"exported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].power =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(row[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.imported -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.imported -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(row[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.exported -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.exported)) /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(timeDiff /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1000 /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t3600)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) / 1000;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].powerImport = Math.max(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].power\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].powerExport = Math.min(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].power\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"cp\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"imported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"imported\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow[baseObject][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].power =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(row[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.imported -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastRow[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][key]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.imported) /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(timeDiff /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1000 /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t3600)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) / 1000;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlastRow = row;\n\t\t\t\t\t\t\treturn row;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlastRow = row;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tmyData.shift();\n\t\t\t\treturn myData;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\t\tchartData() {\n\t\t\t// add all datasets available in the last entry\n\t\t\tvar baseObjectsToProcess = [\"pv\", \"counter\", \"bat\", \"cp\", \"ev\"];\n\t\t\tconst lastElement =\n\t\t\t\tthis.chartDataObject[this.chartDataObject.length - 1];\n\t\t\tif (lastElement) {\n\t\t\t\tbaseObjectsToProcess.forEach((baseObject) => {\n\t\t\t\t\tObject.entries(lastElement[baseObject]).forEach(\n\t\t\t\t\t\t([key, value]) => {\n\t\t\t\t\t\t\tObject.keys(value).forEach((entryKey) => {\n\t\t\t\t\t\t\t\tthis.initDataset(baseObject, key, entryKey);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.chartDatasets;\n\t\t},\n\t},\n\tmethods: {\n\t\tgetCardSubtype(elementKey) {\n\t\t\tswitch (elementKey) {\n\t\t\t\tcase \"bat\":\n\t\t\t\t\treturn \"warning\";\n\t\t\t\tcase \"counter\":\n\t\t\t\t\treturn \"danger\";\n\t\t\t\tcase \"cp\":\n\t\t\t\t\treturn \"primary\";\n\t\t\t\tcase \"pv\":\n\t\t\t\t\treturn \"success\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn \"secondary\";\n\t\t\t}\n\t\t},\n\t\tgetDatasetHidden(baseObject, objectKey) {\n\t\t\t// ToDo\n\t\t\tconsole.debug(\"getDatasetHidden\", baseObject, objectKey);\n\t\t\treturn false;\n\t\t},\n\t\tgetTotalsLabel(\n\t\t\tgroupKey,\n\t\t\tcomponentKey = undefined,\n\t\t\tmeasurementKey = undefined\n\t\t) {\n\t\t\tvar label = \"*test*\";\n\t\t\tif (!componentKey && !measurementKey) {\n\t\t\t\t// console.debug(\"getTotalsLabel for group:\", groupKey);\n\t\t\t\tswitch (groupKey) {\n\t\t\t\t\tcase \"bat\":\n\t\t\t\t\t\treturn \"Speicher\";\n\t\t\t\t\tcase \"counter\":\n\t\t\t\t\t\treturn \"Zähler\";\n\t\t\t\t\tcase \"pv\":\n\t\t\t\t\t\treturn \"Wechselrichter\";\n\t\t\t\t\tcase \"cp\":\n\t\t\t\t\t\treturn \"Ladepunkte\";\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn(\"unknown group key:\", groupKey);\n\t\t\t\t}\n\t\t\t\treturn \"*\" + groupKey + \"*\";\n\t\t\t}\n\t\t\tif (componentKey && !measurementKey) {\n\t\t\t\t// console.debug(\n\t\t\t\t// \t\"getLabel for component:\",\n\t\t\t\t// \tgroupKey,\n\t\t\t\t// \tcomponentKey\n\t\t\t\t// );\n\t\t\t\tif (componentKey == \"all\") {\n\t\t\t\t\treturn \"Summe\";\n\t\t\t\t} else {\n\t\t\t\t\tvar objectId = componentKey.match(/\\d+$/);\n\t\t\t\t\tvar topic = \"\";\n\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\tcase \"cp\":\n\t\t\t\t\t\t\ttopic =\n\t\t\t\t\t\t\t\t\"openWB/chargepoint/\" + objectId + \"/config\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"ev\":\n\t\t\t\t\t\t\ttopic = \"openWB/vehicle/\" + objectId + \"/name\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttopic =\n\t\t\t\t\t\t\t\t\"openWB/system/device/+/component/\" +\n\t\t\t\t\t\t\t\tobjectId +\n\t\t\t\t\t\t\t\t\"/config\";\n\t\t\t\t\t}\n\t\t\t\t\tvar objectTopic = Object.keys(\n\t\t\t\t\t\tthis.getWildcardTopics(topic)\n\t\t\t\t\t)[0];\n\t\t\t\t\t// console.debug(objectTopic);\n\t\t\t\t\tif (objectTopic) {\n\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\tcase \"pv\":\n\t\t\t\t\t\t\t\treturn this.$store.state.mqtt[objectTopic].name;\n\t\t\t\t\t\t\tcase \"counter\":\n\t\t\t\t\t\t\t\treturn this.$store.state.mqtt[objectTopic].name;\n\t\t\t\t\t\t\tcase \"bat\":\n\t\t\t\t\t\t\t\treturn this.$store.state.mqtt[objectTopic].name;\n\t\t\t\t\t\t\tcase \"cp\":\n\t\t\t\t\t\t\t\treturn this.$store.state.mqtt[objectTopic].name;\n\t\t\t\t\t\t\tcase \"ev\":\n\t\t\t\t\t\t\t\treturn this.$store.state.mqtt[objectTopic];\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.warn(\"unknown group key:\", groupKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\"topic not found for:\",\n\t\t\t\t\t\t\tgroupKey,\n\t\t\t\t\t\t\tcomponentKey\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn \"+\" + groupKey + \"+\" + componentKey + \"+\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (componentKey && measurementKey) {\n\t\t\t\t// console.debug(\n\t\t\t\t// \t\"getTotalsLabel for measurement\",\n\t\t\t\t// \tgroupKey,\n\t\t\t\t// \tcomponentKey,\n\t\t\t\t// \tmeasurementKey\n\t\t\t\t// );\n\t\t\t\tswitch (groupKey) {\n\t\t\t\t\tcase \"bat\":\n\t\t\t\t\tcase \"cp\":\n\t\t\t\t\t\tswitch (measurementKey) {\n\t\t\t\t\t\t\tcase \"imported\":\n\t\t\t\t\t\t\t\treturn \"Ladung\";\n\t\t\t\t\t\t\tcase \"exported\":\n\t\t\t\t\t\t\t\treturn \"Entladung\";\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\t\"unknown measurement key:\",\n\t\t\t\t\t\t\t\t\tgroupKey,\n\t\t\t\t\t\t\t\t\tmeasurementKey\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"counter\":\n\t\t\t\t\t\tswitch (measurementKey) {\n\t\t\t\t\t\t\tcase \"imported\":\n\t\t\t\t\t\t\t\treturn \"Bezug/Verbrauch\";\n\t\t\t\t\t\t\tcase \"exported\":\n\t\t\t\t\t\t\t\treturn \"Einspeisung/Erzeugung\";\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\t\"unknown measurement key:\",\n\t\t\t\t\t\t\t\t\tgroupKey,\n\t\t\t\t\t\t\t\t\tmeasurementKey\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"pv\":\n\t\t\t\t\t\tswitch (measurementKey) {\n\t\t\t\t\t\t\tcase \"exported\":\n\t\t\t\t\t\t\t\treturn \"Erzeugung\";\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\t\"unknown measurement key:\",\n\t\t\t\t\t\t\t\t\tgroupKey,\n\t\t\t\t\t\t\t\t\tmeasurementKey\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn(\"unknown group key:\", groupKey);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t\"*\" +\n\t\t\t\t\tgroupKey +\n\t\t\t\t\t\"+\" +\n\t\t\t\t\tcomponentKey +\n\t\t\t\t\t\"+\" +\n\t\t\t\t\tmeasurementKey +\n\t\t\t\t\t\"*\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn label;\n\t\t},\n\t\tgetDatasetLabel(baseObject, objectKey, elementKey, datasetKey) {\n\t\t\t// console.debug(\n\t\t\t// \t\"getDatasetLabel\",\n\t\t\t// \tbaseObject,\n\t\t\t// \tobjectKey,\n\t\t\t// \telementKey,\n\t\t\t// \tdatasetKey\n\t\t\t// );\n\t\t\tvar label = \"*\" + datasetKey;\n\t\t\tif (objectKey == \"all\") {\n\t\t\t\tswitch (baseObject) {\n\t\t\t\t\tcase \"pv\":\n\t\t\t\t\t\tlabel = \"PV (Summe)\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bat\":\n\t\t\t\t\t\tlabel = \"Speicher\";\n\t\t\t\t\t\tswitch (elementKey) {\n\t\t\t\t\t\t\tcase \"imported\":\n\t\t\t\t\t\t\t\tlabel += \" (Ladung, Summe)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"exported\":\n\t\t\t\t\t\t\t\tlabel += \" (Entladung, Summe)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"soc\":\n\t\t\t\t\t\t\t\tlabel += \" SoC (Summe)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tlabel += \" (Summe)\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"cp\":\n\t\t\t\t\t\tlabel = \"Ladepunkte\";\n\t\t\t\t\t\tswitch (elementKey) {\n\t\t\t\t\t\t\tcase \"imported\":\n\t\t\t\t\t\t\t\tlabel += \" (Ladung, Summe)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"exported\":\n\t\t\t\t\t\t\t\tlabel += \" (Entladung, Summe)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"soc\":\n\t\t\t\t\t\t\t\tlabel += \" SoC (Summe)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tlabel += \" (Summe)\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar objectId = objectKey.match(/\\d+$/);\n\t\t\t\tvar topic = \"\";\n\t\t\t\tswitch (baseObject) {\n\t\t\t\t\tcase \"cp\":\n\t\t\t\t\t\ttopic = \"openWB/chargepoint/\" + objectId + \"/config\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ev\":\n\t\t\t\t\t\ttopic = \"openWB/vehicle/\" + objectId + \"/name\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttopic =\n\t\t\t\t\t\t\t\"openWB/system/device/+/component/\" +\n\t\t\t\t\t\t\tobjectId +\n\t\t\t\t\t\t\t\"/config\";\n\t\t\t\t}\n\t\t\t\tvar objectTopic = Object.keys(this.getWildcardTopics(topic))[0];\n\t\t\t\tswitch (baseObject) {\n\t\t\t\t\tcase \"pv\":\n\t\t\t\t\t\tlabel = this.$store.state.mqtt[objectTopic].name;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"counter\":\n\t\t\t\t\t\tlabel = this.$store.state.mqtt[objectTopic].name;\n\t\t\t\t\t\tswitch (elementKey) {\n\t\t\t\t\t\t\tcase \"imported\":\n\t\t\t\t\t\t\t\tlabel += \" (Bezug)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"exported\":\n\t\t\t\t\t\t\t\tlabel += \" (Einspeisung)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bat\":\n\t\t\t\t\t\tlabel = this.$store.state.mqtt[objectTopic].name;\n\t\t\t\t\t\tswitch (elementKey) {\n\t\t\t\t\t\t\tcase \"imported\":\n\t\t\t\t\t\t\t\tlabel += \" (Ladung)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"exported\":\n\t\t\t\t\t\t\t\tlabel += \" (Entladung)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"soc\":\n\t\t\t\t\t\t\t\tlabel += \" SoC\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"cp\":\n\t\t\t\t\t\tlabel = this.$store.state.mqtt[objectTopic].name;\n\t\t\t\t\t\tswitch (elementKey) {\n\t\t\t\t\t\t\tcase \"imported\":\n\t\t\t\t\t\t\t\tlabel += \" (Ladung)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"exported\":\n\t\t\t\t\t\t\t\tlabel += \" (Entladung)\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"soc\":\n\t\t\t\t\t\t\t\tlabel += \" SoC\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ev\":\n\t\t\t\t\t\tlabel = this.$store.state.mqtt[objectTopic];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn label;\n\t\t},\n\t\tgetDatasetIndex(datasetKey) {\n\t\t\tlet index = this.chartDatasets.datasets.findIndex((dataset) => {\n\t\t\t\treturn dataset.jsonKey == datasetKey;\n\t\t\t});\n\t\t\tif (index != -1) {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t\treturn;\n\t\t},\n\t\taddDataset(baseObject, objectKey, elementKey, datasetKey) {\n\t\t\tconsole.debug(\n\t\t\t\t\"adding new dataset\",\n\t\t\t\tbaseObject,\n\t\t\t\tobjectKey,\n\t\t\t\telementKey,\n\t\t\t\tdatasetKey\n\t\t\t);\n\t\t\tvar datasetTemplate = baseObject + \"-\" + elementKey;\n\t\t\tif (this.datasetTemplates[datasetTemplate]) {\n\t\t\t\tvar newDataset = JSON.parse(\n\t\t\t\t\tJSON.stringify(this.datasetTemplates[datasetTemplate])\n\t\t\t\t);\n\t\t\t\tnewDataset.parsing.yAxisKey = datasetKey;\n\t\t\t\tnewDataset.jsonKey = datasetKey;\n\t\t\t\tnewDataset.data = this.chartDataObject;\n\t\t\t\tnewDataset.label = this.getDatasetLabel(\n\t\t\t\t\tbaseObject,\n\t\t\t\t\tobjectKey,\n\t\t\t\t\telementKey,\n\t\t\t\t\tdatasetKey\n\t\t\t\t);\n\t\t\t\tif (newDataset.labelSuffix != undefined) {\n\t\t\t\t\tnewDataset.label =\n\t\t\t\t\t\tnewDataset.label + newDataset.labelSuffix;\n\t\t\t\t}\n\t\t\t\tif (objectKey == \"all\") {\n\t\t\t\t\tnewDataset.hidden = false;\n\t\t\t\t}\n\t\t\t\treturn this.chartDatasets.datasets.push(newDataset) - 1;\n\t\t\t} else {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"no matching template found for: \" +\n\t\t\t\t\t\tdatasetKey +\n\t\t\t\t\t\t\" with template: \" +\n\t\t\t\t\t\tdatasetTemplate\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t},\n\t\tinitDataset(baseObject, objectKey, elementKey) {\n\t\t\tconst elementKeysToAdd = [\"power\", \"soc\"];\n\t\t\tconst datasetKey = baseObject + \".\" + objectKey + \".\" + elementKey;\n\t\t\tif (elementKeysToAdd.includes(elementKey)) {\n\t\t\t\tvar index = this.getDatasetIndex(datasetKey);\n\t\t\t\tconst hidden = this.getDatasetHidden(baseObject, objectKey);\n\t\t\t\tif (index == undefined && !hidden) {\n\t\t\t\t\tindex = this.addDataset(\n\t\t\t\t\t\tbaseObject,\n\t\t\t\t\t\tobjectKey,\n\t\t\t\t\t\telementKey,\n\t\t\t\t\t\tdatasetKey\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (index != undefined && hidden) {\n\t\t\t\t\tconsole.info(\n\t\t\t\t\t\t\"component hidden:\",\n\t\t\t\t\t\tbaseObject,\n\t\t\t\t\t\tobjectKey,\n\t\t\t\t\t\telementKey,\n\t\t\t\t\t\tindex\n\t\t\t\t\t);\n\t\t\t\t\tthis.chartDatasets.datasets.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\trequestMonthlyChart() {\n\t\t\tlet myForm = document.forms[\"monthlyChartForm\"];\n\t\t\tif (!myForm.reportValidity()) {\n\t\t\t\tconsole.log(\"form invalid\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.chartDatasets.datasets = [];\n\t\t\t\tthis.$emit(\"sendCommand\", {\n\t\t\t\t\tcommand: \"getMonthlyLog\",\n\t\t\t\t\tdata: this.commandData,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n\tmounted() {\n\t\tconst today = new Date();\n\t\tthis.currentMonth = this.monthlyChartDate =\n\t\t\ttoday.getFullYear() +\n\t\t\t\"-\" +\n\t\t\tString(today.getMonth() + 1).padStart(2, \"0\");\n\t\tthis.requestMonthlyChart();\n\t},\n};\n</script>\n","import { render } from \"./MonthlyChart.vue?vue&type=template&id=7c96f82e\"\nimport script from \"./MonthlyChart.vue?vue&type=script&lang=js\"\nexport * from \"./MonthlyChart.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Volumes/Developer/openwb-ui-settings/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","name","_createElementBlock","_createElementVNode","_createVNode","_component_openwb_base_card","title","collapsible","collapsed","footer","_component_openwb_base_click_button","onClick","$options","_component_openwb_base_text_input","subtype","min","max","$data","$event","_hoisted_4","_hoisted_5","_component_Line","chartData","chartOptions","_Fragment","_renderList","group","groupKey","_createBlock","key","component","componentKey","_component_openwb_base_heading","measurement","measurementKey","readonly","unit","_ctx","_component_openwb_base_alert","Chart","Tooltip","Legend","LineController","LineElement","PointElement","LinearScale","TimeScale","Filler","ZoomPlugin","components","Line","mixins","ComponentStateMixin","emits","data","mqttTopicsToSubscribe","currentMonth","monthlyChartRequestData","month","year","datasetTemplates","label","jsonKey","borderColor","backgroundColor","fill","lineTension","hidden","borderWidth","yAxisID","parsing","xAxisKey","yAxisKey","plugins","display","tooltip","enabled","legend","zoom","pan","mode","threshold","wheel","pinch","elements","point","radius","responsive","maintainAspectRatio","scales","x","type","time","tooltipFormat","text","ticks","source","font","size","maxTicksLimit","grid","y1","position","suggestedMin","suggestedMax","stepSize","chartDatasets","datasets","computed","monthlyChartDate","get","this","set","newValue","splitDate","split","commandData","chartDataRead","undefined","chartDataObject","chartDataHasEntries","length","chartTotals","$store","state","mqtt","Object","prototype","hasOwnProperty","call","totals","diff","bat","counter","pv","cp","keysToProcess","process","startValue","endValue","path","keys","includes","Math","floor","traverse","startObject","endObject","method","currentPath","element","apply","chartEntries","start","end","console","debug","entries","lastRow","myData","JSON","parse","stringify","map","row","timestamp","timeDiff","baseObjectsToProcess","forEach","baseObject","value","power","exported","imported","powerImport","powerExport","shift","lastElement","entryKey","initDataset","methods","getCardSubtype","elementKey","getDatasetHidden","objectKey","getTotalsLabel","warn","objectId","match","topic","objectTopic","getWildcardTopics","getDatasetLabel","datasetKey","getDatasetIndex","index","findIndex","dataset","addDataset","datasetTemplate","newDataset","labelSuffix","push","elementKeysToAdd","info","splice","requestMonthlyChart","myForm","document","forms","reportValidity","$emit","command","log","mounted","today","Date","getFullYear","String","getMonth","padStart","__exports__","render"],"sourceRoot":""}