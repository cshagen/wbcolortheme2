"use strict";(self["webpackChunkopenwb_ui_settings"]=self["webpackChunkopenwb_ui_settings"]||[]).push([[9275],{9275:function(e,n,t){t.r(n),t.d(n,{default:function(){return _}});var i=t(6252),r=t(3577);const a={class:"device-http-inverter"},u=(0,i.Uk)(" Einstellungen für Http Wechselrichter "),l={class:"small"},o=(0,i.Uk)(' Diese Angabe wird an die IP bzw. den Hostnamen angehängt und muss mit einem Schrägstrich "/" beginnen.'),d=(0,i._)("br",null,null,-1),s=(0,i.Uk)(" Es wird vom Server eine Zahl (Float mit Punkt als Dezimaltrennzeichen oder Integer) erwartet, welche die aktuelle Leistung in Watt darstellt. "),p=(0,i.Uk)(' Diese Angabe wird an die IP bzw. den Hostnamen angehängt und muss mit einem Schrägstrich "/" beginnen.'),c=(0,i._)("br",null,null,-1),g=(0,i.Uk)(" Es wird vom Server eine Zahl (Float mit Punkt als Dezimaltrennzeichen oder Integer) erwartet, welche den aktuellen absoluten Zählerstand in kWh darstellt."),h=(0,i._)("br",null,null,-1),m=(0,i.Uk)(' Wird hier "none" eingetragen, wird der Zählerstand intern simuliert. ');function w(e,n,t,w,f,b){const v=(0,i.up)("openwb-base-heading"),_=(0,i.up)("openwb-base-text-input");return(0,i.wg)(),(0,i.iD)("div",a,[(0,i.Wm)(v,null,{default:(0,i.w5)((()=>[u,(0,i._)("span",l,"(Modul: "+(0,r.zw)(e.$options.name)+")",1)])),_:1}),(0,i.Wm)(_,{title:"Pfad für Leistung",subtype:"text",required:"",pattern:"^/[-a-zA-Z0-9@:%_\\+.~#?&/=]*","model-value":t.configuration.power_path,"onUpdate:modelValue":n[0]||(n[0]=e=>b.updateConfiguration(e,"configuration.power_path"))},{help:(0,i.w5)((()=>[o,d,s])),_:1},8,["model-value"]),(0,i.Wm)(_,{title:"Pfad für Zählerstand Erzeugung",subtype:"text",required:"",pattern:"^(/[-a-zA-Z0-9@:%_\\+.~#?&/=]*)|none","model-value":t.configuration.counter_path,"onUpdate:modelValue":n[1]||(n[1]=e=>b.updateConfiguration(e,"configuration.counter_path"))},{help:(0,i.w5)((()=>[p,c,g,h,m])),_:1},8,["model-value"])])}var f={name:"DeviceHttpInverter",emits:["update:configuration"],props:{configuration:{type:Object,required:!0},deviceId:{default:void 0},componentId:{required:!0}},methods:{updateConfiguration(e,n){this.$emit("update:configuration",{value:e,object:n})}}},b=t(8118);const v=(0,b.Z)(f,[["render",w]]);var _=v}}]);
//# sourceMappingURL=9275.fca43190.js.map